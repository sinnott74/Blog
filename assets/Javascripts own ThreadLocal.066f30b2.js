import{j as e}from"./jsx-runtime.7a5a6aec.js";import{u as o}from"./index.d82828d2.js";import"./vendor.76997228.js";const i="Javascript's own ThreadLocal",l="Daniel Sinnott",x="https://i.imgur.com/VPnnX8P.png",d=12,h=["Javascript","AsyncHooks"],u="Mon, 26th Mar 2018",m=new Date(1522075625542);function k(n={}){const{wrapper:a}=Object.assign({},o(),n.components);return a?e.exports.jsx(a,Object.assign({},n,{children:e.exports.jsx(t,{})})):t();function t(){const s=Object.assign({p:"p",code:"code",h3:"h3",a:"a",pre:"pre",span:"span"},o(),n.components);return e.exports.jsxs(e.exports.Fragment,{children:[e.exports.jsxs(s.p,{children:["The concurrency model of ",e.exports.jsx(s.code,{children:"Java"})," & ",e.exports.jsx(s.code,{children:"Javascript"})," is very different."]}),`
`,e.exports.jsxs(s.p,{children:[`I was to discuss them both today from the context of setting a variable to be used throughout a
single business process. Consider a server which receives a `,e.exports.jsx(s.code,{children:"GET"}),` request. At some point during the
business process carried out during the request lifecycle something is written to a log file. If we
consider the request to a single transaction, we might want the transaction's ID to be included in
the log as we might have several transaction writing to log at the same time.`]}),`
`,e.exports.jsx(s.h3,{children:"Java"}),`
`,e.exports.jsxs(s.p,{children:[`Java uses a multi-threading model. A thread according the Javadocs is a thread of execution of a
program. Commands in the same thread execute sequentially. When a blocking command is executed (e.g.
I/O) the thread will wait for it to be completed until is executes the next command, however this
will not prevent other threads from executing, therefore not completely blocking the application.
Threads can be seen to be wasteful with resources as they may be sitting there doing nothing while
waiting, however they allow for a much easier development experience. Enter `,e.exports.jsx(s.a,{href:"https://docs.oracle.com/javase/7/docs/api/java/lang/ThreadLocal.html",children:e.exports.jsx(s.code,{children:"ThreadLocal"})}),"."]}),`
`,e.exports.jsx(s.pre,{className:"language-java",children:e.exports.jsxs(s.code,{className:"language-java",children:[e.exports.jsx(s.span,{className:"token keyword",children:"public"})," ",e.exports.jsx(s.span,{className:"token keyword",children:"class"})," ",e.exports.jsx(s.span,{className:"token class-name",children:"Transaction"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`

  `,e.exports.jsx(s.span,{className:"token comment",children:"// Initialise ThreadLocal which contains a map to store all of our Thread scoped variables"}),`
  `,e.exports.jsx(s.span,{className:"token keyword",children:"private"})," ",e.exports.jsx(s.span,{className:"token keyword",children:"static"})," ",e.exports.jsx(s.span,{className:"token class-name",children:"ThreadLocal"}),e.exports.jsxs(s.span,{className:"token generics",children:[e.exports.jsx(s.span,{className:"token punctuation",children:"<"}),e.exports.jsx(s.span,{className:"token class-name",children:"HashMap"}),e.exports.jsx(s.span,{className:"token punctuation",children:"<"}),e.exports.jsx(s.span,{className:"token class-name",children:"Object"}),e.exports.jsx(s.span,{className:"token punctuation",children:","})," ",e.exports.jsx(s.span,{className:"token class-name",children:"Object"}),e.exports.jsx(s.span,{className:"token punctuation",children:">"}),e.exports.jsx(s.span,{className:"token punctuation",children:">"})]})," threadScopedVariable ",e.exports.jsx(s.span,{className:"token operator",children:"="}),`
      `,e.exports.jsx(s.span,{className:"token keyword",children:"new"})," ",e.exports.jsx(s.span,{className:"token class-name",children:"ThreadLocal"}),e.exports.jsxs(s.span,{className:"token generics",children:[e.exports.jsx(s.span,{className:"token punctuation",children:"<"}),e.exports.jsx(s.span,{className:"token class-name",children:"HashMap"}),e.exports.jsx(s.span,{className:"token punctuation",children:"<"}),e.exports.jsx(s.span,{className:"token class-name",children:"Object"}),e.exports.jsx(s.span,{className:"token punctuation",children:","})," ",e.exports.jsx(s.span,{className:"token class-name",children:"Object"}),e.exports.jsx(s.span,{className:"token punctuation",children:">"}),e.exports.jsx(s.span,{className:"token punctuation",children:">"})]}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`

  `,e.exports.jsx(s.span,{className:"token comment",children:"// Getter"}),`
  `,e.exports.jsx(s.span,{className:"token keyword",children:"public"})," ",e.exports.jsx(s.span,{className:"token keyword",children:"static"})," ",e.exports.jsx(s.span,{className:"token function",children:"getThreadScopedVariable"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token class-name",children:"Object"})," identifier",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
      `,e.exports.jsx(s.span,{className:"token keyword",children:"return"})," threadScopedVariables",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token function",children:"get"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"identifier",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
  `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`

  `,e.exports.jsx(s.span,{className:"token comment",children:"// Setter"}),`
  `,e.exports.jsx(s.span,{className:"token keyword",children:"public"})," ",e.exports.jsx(s.span,{className:"token function",children:"setThreadScopedVariable"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token class-name",children:"Object"})," identifier",e.exports.jsx(s.span,{className:"token punctuation",children:","})," ",e.exports.jsx(s.span,{className:"token class-name",children:"Object"})," variable",e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
      threadScopedVariables`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token function",children:"set"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"identifier",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
  `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`

`,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`
`]})}),`
`,e.exports.jsx(s.p,{children:`The above class can be used to set variables that are scoped to each individual thread. For example
setting a transactionID.`}),`
`,e.exports.jsx(s.h3,{children:"Javascript"}),`
`,e.exports.jsxs(s.p,{children:[`Javascript uses a single threaded, event loop based concurrency model. All execution of code happens
in the same thread (ignoring `,e.exports.jsx(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers",children:"Web Workers"}),` in browser land). If a command blocks the thread, the
application comes to a halt until that command finishes. Its poor practice & actively discourages to
write blocking code. Callbacks & Promises go a long way to helping write good javascript commands.
These both rely on the event loop. For more info on the event loop see my post `,e.exports.jsx(s.a,{href:"/blog/7",children:`Task, Microtasks &
Automobiles`}),`. In layman's terms, the when a "Task" is blocked the event loop will pick up another to
execute until the previous is ready. This can be very efficient with resources, however it makes it
very difficult to determine is a command is happening in the same transaction as another command as
they all run on the same thread.`]}),`
`,e.exports.jsxs(s.p,{children:["Those familiar with this issue in Javascript may immediately think of ",e.exports.jsx(s.a,{href:"https://github.com/othiym23/node-continuation-local-storage",children:"Continuation-Local Storage"}),`
(CLS), however this implementation has issues & loses context is certain situations, hence packages
like `,e.exports.jsx(s.a,{href:"https://www.npmjs.com/package/cls-bluebird",children:"cls-bluebird"})," patching CLS in some situations but not all."]}),`
`,e.exports.jsxs(s.p,{children:["Enter ",e.exports.jsx(s.a,{href:"https://nodejs.org/api/async_hooks.html",children:e.exports.jsx(s.code,{children:"AsyncHooks"})}),`. AsyncHooks is a (currently as of v9.9) experimental API in NodeJS. It allows
for a lifecycle to be added around each async resource execution to contains a reference to its
AsyncID & its parents AsyncID. From this its possible to build up a thread like transaction model.`]}),`
`,e.exports.jsx(s.pre,{className:"language-javascript",children:e.exports.jsxs(s.code,{className:"language-javascript",children:[e.exports.jsx(s.span,{className:"token keyword",children:"const"})," asyncHooks ",e.exports.jsx(s.span,{className:"token operator",children:"="})," ",e.exports.jsx(s.span,{className:"token function",children:"require"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token string",children:'"async_hooks"'}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`

`,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," map ",e.exports.jsx(s.span,{className:"token operator",children:"="})," ",e.exports.jsx(s.span,{className:"token keyword",children:"new"})," ",e.exports.jsx(s.span,{className:"token class-name",children:"Map"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`

`,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," hook ",e.exports.jsx(s.span,{className:"token operator",children:"="})," asyncHooks",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"createHook"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
    `,e.exports.jsx(s.span,{className:"token doc-comment comment",children:`/**
     * Sets the parent's context as the current context
     */`}),`
    `,e.exports.jsx(s.span,{className:"token function-variable function",children:"init"}),e.exports.jsx(s.span,{className:"token operator",children:":"})," ",e.exports.jsx(s.span,{className:"token keyword",children:"function"})," ",e.exports.jsx(s.span,{className:"token function",children:"init"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsxs(s.span,{className:"token parameter",children:["asyncId",e.exports.jsx(s.span,{className:"token punctuation",children:","})," type",e.exports.jsx(s.span,{className:"token punctuation",children:","})," triggerAsyncId"]}),e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
        `,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," parentContext ",e.exports.jsx(s.span,{className:"token operator",children:"="})," map",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"get"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"triggerAsyncId",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
        `,e.exports.jsx(s.span,{className:"token keyword control-flow",children:"if"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"parentContext",e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
            `,e.exports.jsx(s.span,{className:"token comment",children:"// set parent context as current context"}),`
            map`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"set"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"asyncId",e.exports.jsx(s.span,{className:"token punctuation",children:","})," parentContext",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
        `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`
    `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:","}),`

    `,e.exports.jsx(s.span,{className:"token doc-comment comment",children:`/**
     * Remove the data
     */`}),`
    `,e.exports.jsx(s.span,{className:"token function-variable function",children:"destroy"}),e.exports.jsx(s.span,{className:"token operator",children:":"})," ",e.exports.jsx(s.span,{className:"token keyword",children:"function"})," ",e.exports.jsx(s.span,{className:"token function",children:"destroy"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token parameter",children:"asyncId"}),e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
        `,e.exports.jsx(s.span,{className:"token keyword control-flow",children:"if"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"map",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"has"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"asyncId",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
            map`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"delete"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"asyncId",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
        `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`
    `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:","}),`
`,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
hook`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"enable"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`

`,e.exports.jsxs(s.span,{className:"token doc-comment comment",children:[`/**
 * Set the key/value for this score
 * `,e.exports.jsx(s.span,{className:"token keyword",children:"@param"})," ",e.exports.jsxs(s.span,{className:"token class-name",children:[e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),"String",e.exports.jsx(s.span,{className:"token punctuation",children:"}"})]})," ",e.exports.jsx(s.span,{className:"token parameter",children:"key"}),` The key of value
 * `,e.exports.jsx(s.span,{className:"token keyword",children:"@param"})," ",e.exports.jsxs(s.span,{className:"token class-name",children:[e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),"String",e.exports.jsx(s.span,{className:"token punctuation",children:"}"})]})," ",e.exports.jsx(s.span,{className:"token parameter",children:"value"}),` The value
 */`]}),`
exports`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method-variable function-variable method function property-access",children:"set"})," ",e.exports.jsx(s.span,{className:"token operator",children:"="})," ",e.exports.jsx(s.span,{className:"token keyword",children:"function"})," ",e.exports.jsx(s.span,{className:"token function",children:"setValue"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsxs(s.span,{className:"token parameter",children:["key",e.exports.jsx(s.span,{className:"token punctuation",children:","})," value"]}),e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
    `,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," id ",e.exports.jsx(s.span,{className:"token operator",children:"="})," asyncHooks",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"executionAsyncId"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
    `,e.exports.jsx(s.span,{className:"token keyword",children:"let"})," data ",e.exports.jsx(s.span,{className:"token operator",children:"="})," map",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"get"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"id",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
    `,e.exports.jsx(s.span,{className:"token keyword control-flow",children:"if"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token operator",children:"!"}),"data",e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
        data `,e.exports.jsx(s.span,{className:"token operator",children:"="})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
        map`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"set"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"id",e.exports.jsx(s.span,{className:"token punctuation",children:","})," data",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
    `,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),`
    data`,e.exports.jsx(s.span,{className:"token punctuation",children:"["}),"key",e.exports.jsx(s.span,{className:"token punctuation",children:"]"})," ",e.exports.jsx(s.span,{className:"token operator",children:"="})," value",e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
`,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`

`,e.exports.jsxs(s.span,{className:"token doc-comment comment",children:[`/**
 * Get the value by key
 * `,e.exports.jsx(s.span,{className:"token keyword",children:"@param"})," ",e.exports.jsxs(s.span,{className:"token class-name",children:[e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),"String",e.exports.jsx(s.span,{className:"token punctuation",children:"}"})]})," ",e.exports.jsx(s.span,{className:"token parameter",children:"key"}),` The key of value
 */`]}),`
exports`,e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method-variable function-variable method function property-access",children:"get"})," ",e.exports.jsx(s.span,{className:"token operator",children:"="})," ",e.exports.jsx(s.span,{className:"token keyword",children:"function"})," ",e.exports.jsx(s.span,{className:"token function",children:"getValue"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token parameter",children:"key"}),e.exports.jsx(s.span,{className:"token punctuation",children:")"})," ",e.exports.jsx(s.span,{className:"token punctuation",children:"{"}),`
    `,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," id ",e.exports.jsx(s.span,{className:"token operator",children:"="})," asyncHooks",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"executionAsyncId"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
    `,e.exports.jsx(s.span,{className:"token keyword",children:"const"})," data ",e.exports.jsx(s.span,{className:"token operator",children:"="})," map",e.exports.jsx(s.span,{className:"token punctuation",children:"."}),e.exports.jsx(s.span,{className:"token method function property-access",children:"get"}),e.exports.jsx(s.span,{className:"token punctuation",children:"("}),"id",e.exports.jsx(s.span,{className:"token punctuation",children:")"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
    `,e.exports.jsx(s.span,{className:"token keyword control-flow",children:"return"})," data",e.exports.jsx(s.span,{className:"token punctuation",children:"["}),"key",e.exports.jsx(s.span,{className:"token punctuation",children:"]"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
`,e.exports.jsx(s.span,{className:"token punctuation",children:"}"}),e.exports.jsx(s.span,{className:"token punctuation",children:";"}),`
`]})}),`
`,e.exports.jsxs(s.p,{children:[`The above javascript code is analogous to the Java code earlier. Both include a getter & setter for
transaction scoped variable. The call to `,e.exports.jsx(s.code,{children:"asyncHooks.createHook"}),` creates init & destroy lifecycle
hook around each async resource which allows us to keep track of the context in which the resource
is operating. A transaction scoped variable can be placed into that context & access by code which
is a child of the code which created the context. E.g. if we created a TransactionID variable & put
it into the context at the very beginning of our request lifecycle, it can be accessed by an code
called during that request.`]}),`
`,e.exports.jsx(s.p,{children:`AsyncHooks do a performance impact as the extra code being called & extra object being stored in
memory, however it allows you to write much cleaner code as the TransactionID or even a database
transaction object don't need to be passed around to event function in the entire application. The
can simple be accessed when needed.`})]})}}export{l as author,m as created,u as date,k as default,d as id,x as imageurl,h as tags,i as title};
